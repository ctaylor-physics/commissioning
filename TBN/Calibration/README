Calibration and Phase-and-Sum Beamforming Scripts
=================================================

simpleFringe.py
---------------
Simple script (with hard coded integration times) for performing time series
cross-correlation of TBN data for all stands relative to the outlier (#258).

simpleFringeDemux.py
--------------------
Version of simpleFringe.py that can deal with TBN files on a DRSU with more 
than one frequency.

.. note::
	This version needs the fringe.so Python module (built with the 
	included Makefile) to run.

	To build the fringe.so module (from BASH):
	  $ rm -rf fringe.so fringe.o
	  $ make

splitMultiVis.py
----------------
Script to split apart *-mult-vis.npz files generated by simpleFringeDemux.py in
single-frequency files that look like what simpleFringe.py generates.

prepareDelayData.py
-------------------
Given a collection of NPZ files generated by simpleFringe.py, combine the
results together and prepare the data for delay fitting.  This script creates
a NPZ file, prepared-dat.npz, containing the frequencies, times, complex
visibilities, and model visibilities for all of the data.

interactiveFitting.py
---------------------
Script that takes the NPZ file prepared by preparedDelayData.py and allows for
the interactive fitting of delays on an antenna-by-antenna basis.  The results 
of the fits are save incrementally to a text file called 'add-delay.txt'.

delayConversion.py
------------------
Given the 'add-delay.txt' file generated by interactiveFitting.py, combine the
results and write the output to a NPZ file called 'add-delay.npz' which stores
the delay difference between observer and the a priori cable model.

solveCoeffs.py
--------------
Given the complex visibilities generated by simpleFringe.py, create a reference 
NPZ file for use with phasedBeam.py/trackSource.py for generating phase-and-sum 
beam forming coefficients.  This script performs fringe stopping on the 
calibration source so the input NPZ file should have enough time coverage to 
make this useful.

formBeam.py
-----------
Given a CLN calibration file from solveCoeffs.py, an azimuth/elevation, and a TBN
file, perform simple phase-and-sum beam forming.

phasedBeam.py
------------
Given a reference file for calibration and a pointing azimuth and elevation 
in degrees, create a set of phase-and-sum beamforming coefficients for DRX.

trackSource.py
--------------
Modified version of phasedBeam.py that takes a calibration file, a source name
from astroevents2.py, a start date/time, and a duration in hours to generate
course tracking.  The script generates delay files for every 4 minutes in the 
time range as well as a bash script that orchestrates everything.

phase-calib-Sun-38MHz.npz
-------------------------
Calibration file for phasedBeam.py at 37.90 MHz.

phase-calib-Sun-50MHz.npz
-------------------------
Calibration file for phasedBeam.py at 50.00 MHz.

phase-calib-Sun-74MHz.npz
-------------------------
Calibration file for phasedBeam.py at 74.03 MHz.

phase-calib-Sun-84MHz.npz
-------------------------
Calibration file for phasedBeam.py at 84.00 MHz.
